{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.host = environment.host;\n  }\n  register(user, callback) {\n    this.httpClient.post(`${this.host}/users`, user).subscribe(data => {\n      callback(data);\n    }, err => {\n      callback(err.error);\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,WAAW;EAIpBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,SAAI,GAAGH,WAAW,CAACI,IAAI;EAEsB;EAE7CC,QAAQ,CAACC,IAAS,EAAEC,QAAQ;IACxB,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAE,GAAG,IAAI,CAACJ,IAAI,QAAQ,EAAEE,IAAI,CAAC,CAACG,SAAS,CAAEC,IAAI,IAAI;MACjEH,QAAQ,CAACG,IAAI,CAAC;IAClB,CAAC,EAAGC,GAAG,IAAI;MACPJ,QAAQ,CAACI,GAAG,CAACC,KAAK,CAAC;IACvB,CAAC,CAAC;EACN;;;mBAZSX,WAAW;AAAA;;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFR;AAAM","names":["HttpClient","environment","AuthService","constructor","httpClient","host","register","user","callback","post","subscribe","data","err","error","factory","providedIn"],"sourceRoot":"","sources":["D:\\Master\\Projet\\MEAN\\m1p10mean-hery-tahiana-front\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n\r\n    host = environment.host;\r\n\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n    register(user: any, callback) {\r\n        this.httpClient.post( `${this.host}/users`, user).subscribe((data) => {\r\n            callback(data);\r\n        }, (err) => {\r\n            callback(err.error);\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}